# -*- coding: utf-8 -*-
"""AnaliseAvengers.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UrE94wr1gHlH-YLyFbNBVSa0TzuAwGbd
"""

import pandas as pd
import numpy as np

df = pd.read_csv("vingadores.csv", encoding='latin-1')

print(df.head())

df

print(df.info())

"""O código utilizado acima tem como objetivo apresentar as principais informações contidas no nosso DataFrame. Através dele, podemos obter um resumo das colunas, seus tipos de dados e a quantidade de valores não nulos presentes em cada uma."""

df.fillna(0, inplace=True)

"""O código acima realiza a substituição de todos os valores nulos (NaN) presentes no DataFrame por zeros. Essa etapa de tratamento de dados é crucial para garantir que a análise subsequente não seja afetada por valores ausentes, permitindo uma interpretação mais precisa dos dados."""

df.head()

colunas_para_remover = ['Death3',	'Return3',	'Death4',	'Return4',	'Death5',	'Return5']

df.drop(labels=colunas_para_remover, axis=1, inplace=True)

df.head()

df

"""O código acima realiza a remoção de colunas irrelevantes ou sem dados do DataFrame. Essa etapa de limpeza de dados é fundamental para simplificar a análise, eliminando informações desnecessárias que poderiam prejudicar a clareza e o foco nos dados relevantes."""

import matplotlib.pyplot as plt
import seaborn as sns

contagem_genero = df['Gender'].value_counts()

homens = contagem_genero.get('MALE', 0)
 mulheres = contagem_genero.get('FEMALE', 0)
 contagem_genero

generos = ['Homens', 'Mulheres']
 contagens = [homens, mulheres]

"""Realizada a contagem de homens e mulheres com dados cadastrados no Daatframe."""

plt.figure(figsize=(8, 6))  # Tamanho da figura
        plt.bar(generos, contagens, color=['skyblue', 'salmon']) # Cria as barras
        plt.xlabel('Gênero') # Legenda do eixo x
        plt.ylabel('Contagem') # Legenda do eixo y
        plt.title('Distribuição de Gênero') # Título do gráfico
        plt.show() # Exibe o gráfico

contagem = df['Current?'].value_counts()

yes_count = contagem.get('YES', 0)
no_count = contagem.get('NO', 0)

contagem

"""A análise dos dados revelou que, dos 173 personagens da Marvel presentes no DataFrame, 91 não estão atualmente em histórias da Marvel. Isso indica que há mais personagens fora de circulação do que em atividade no universo Marvel."""

rotulos = ['YES', 'NO']
contagens = [yes_count, no_count]

plt.figure(figsize=(8, 6))
plt.bar(rotulos, contagens, color=['skyblue', 'salmon'])
plt.xlabel('Status')
plt.ylabel('Contagem')
plt.title('Current?')
plt.show()

df

top_20_personagens = df.nlargest(20, 'Appearances')
top_20_personagens

print("\nTop 10 personagens com mais aparições:")
for index, row in top_20_personagens.iterrows(): # changed top_10 to top_20 since top_10 isn't defined
    print(f"Nome: {row['Name/Alias']} ") # Added 4 spaces of indentation

"""Apresentamos aqui os 10 personagens da Marvel com o maior número de aparições em histórias em quadrinhos. A análise revela que esses personagens são também os mais populares e reconhecidos pelo público.

"""

top_20_personagens_menos_aparicoes = df.nsmallest(20, 'Appearances')
top_20_personagens_menos_aparicoes

print("\nTop 10 personagens com menoos aparições:")
for index, row in top_20_personagens_menos_aparicoes.iterrows(): # changed top_10 to top_20 since top_10 isn't defined
    print(f"Nome: {row['Name/Alias']} ") # Added 4 spaces of indentation

"""Observamos a presença de personagens com a coluna 'Nome' preenchida com o valor 0, indicando a ausência de um nome válido. Para assegurar a precisão da análise, removeremos esses personagens. Após a limpeza, identificaremos novamente os 10 personagens com menos aparições no DataFrame resultante."""

def remover_linhas_nome_zero_inplace(df):
    """
    Remove linhas onde 'Name/Alias' é '0' usando drop() e inplace=True.
    """
    indices_para_remover = df[df['Name/Alias'] == '0'].index
    df.drop(indices_para_remover, inplace=True)

# Supondo que 'df' seja o seu DataFrame original
# ... (seu código para carregar ou criar o DataFrame)

# Removendo as linhas (modifica o DataFrame original)
remover_linhas_nome_zero_inplace(df)

df

def  top_10_menos_aparicoes(df, coluna_aparicoes='Appearances', coluna_nome='Name/Alias'):
    """
    Mostra os 10 personagens com menos aparições em um DataFrame.
    """
    df_ordenado = df.sort_values(by=coluna_aparicoes, ascending=True)
def  top_10_menos_aparicoes(df, coluna_aparicoes='Appearances', coluna_nome='Name/Alias'):
    """
    Mostra os 10 personagens com menos aparições em um DataFrame.
    """
    df_ordenado = df.sort_values(by=coluna_aparicoes, ascending=True)
    top_10 = df_ordenado.head(10)
    print("\nTop 10 personagens com menos aparições (após remoção de nomes ausentes):")
    for index, row in top_10.iterrows():
        print(f"Nome: {row[coluna_nome]}")

top_10_menos_aparicoes(df)

"""A análise inicial dos dados dos Vingadores revela uma predominância de personagens masculinos e um número maior de personagens inativos do que ativos. Os personagens com mais aparições são os mais icônicos, enquanto os com menos aparições incluem figuras menos conhecidas, com necessidade de limpeza de dados ainda pendente (nomes com valor '0'). A análise sugere um foco narrativo nos personagens principais e a natureza dinâmica do universo Marvel. Próximos passos incluem refinar a limpeza de dados e explorar outras relações entre os atributos dos personagens."""



















